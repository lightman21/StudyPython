import osimport sysfrom org.ith.learn.PXML import parse_string_as_kcefrom org.ith.learn.TUtils import KCEBean, write_to_excel, open_excel_as_list# 所有字符串 key cn enall_excel_path = "/Users/toutouhiroshidaiou/Downloads/google/2020_03_31_Kmobile_Android_i18n.xlsx"all_en_xml_path = "/Users/toutouhiroshidaiou/keruyun/proj/OnMobile-Android/app/src/main/res/values-en/strings.xml"cn_xml_path = "/Users/toutouhiroshidaiou/keruyun/proj/OnMobile-Android/app/src/main/res/values/strings.xml"path_out_excel = "../../../docs/path_of_excelwrite.xlsx"def main(argv=None):    if argv is None:        argv = sys.argv    diff()def diff():    all_excel_kce_list = remove_empty(open_excel_as_list(all_excel_path))    all_xml_kec_list = parse_string_as_kce(all_en_xml_path, kce_value='en')    #   不匹配的字符串在merge后的xml文件中查中文    all_cn = parse_string_as_kce("th_tanghao.xml", kce_value='cn')    tc = 0    for en in all_xml_kec_list:        for cn in all_cn:            if en.key == cn.key:                en.cn = cn.cn                tc += 1    print("all_xml_kec_list size ", len(all_xml_kec_list), " tc = ", tc)    print("all_excel_kce_list size ", len(all_excel_kce_list))    # 所有的excel的kce是不是都在xml里了    count = 0    not_match_list = []    # 找出xml里有 但是excel里没有的补充上    for xml_kce in all_xml_kec_list:        if has_kce_key(all_excel_kce_list, xml_kce.key):            count += 1        else:            not_match_list.append(xml_kce)    for no_mat in not_match_list:        for k in all_cn:            if k.key == no_mat.key:                no_mat.cn = k.cn                # print("transed key ", k.key, " cn ", k.cn)    for kce in not_match_list:        if len(str(kce.cn)) <= 0:            print("no cn kce ", kce.key, kce.en)    # for xiu in all_xml_kec_list:    #     print(xiu)    # if len(str(xiu.cn)) <= 0 or len(str(xiu.en)) <= 0:    #     print(xiu.key, "empty", xiu)    write_to_excel(all_xml_kec_list, "./total.xlsx")def has_kce_key(list_kce, key):    for kce in list_kce:        if kce.key == key:            return kcedef demo():    all_trans_list = remove_empty(open_excel_as_list("all_trans"))    all_string_list = remove_empty(open_excel_as_list("all_string"))    no_key_list = []    count = 0    key_list = []    for item in all_trans_list:        if has_key(item.cn, all_string_list):            count += 1            key_list.append(item)        else:            no_key_list.append(item)    write_to_excel(all_string_list, path_of_excel=path_out_excel)def remove_empty(mlist, need_replace=False):    tmp = []    for t in mlist:        if not need_replace and len(str(t.cn)) > 0 and len(str(t.en)) > 0:            tmp.append(t)        elif need_replace and len(str(t.cn)) > 0 and len(str(t.en)) > 0:            tcn = str(t.cn).replace("，", ",").replace("。", ".")            t.cn = tcn            tmp.append(t)        elif len(str(t.cn)) > 0:            tmp.append(t)    return tmpdef has_key(str_cn, all_trans_list):    for item in all_trans_list:        if item.cn == str_cn:            return item.keyif __name__ == "__main__":    sys.exit(main())