2016-11-22 07:40
https://www.safaribooksonline.com/library/view/python-programming-language/9780134217314/PYMC_01_03.html
很多时候运行python程序,需要类型这样
python3 nextbus.py
如果不想加前面的python3.可以这样
在nextbus.py的最上面加入
#! /usr/bin/env python3
以告诉系统这是一个python脚本,需要python3来执行
然后记得给这个nextbus.py加上可执行权限,即
chmod +x nextbus.py

在python程序中格式化或者说在字符串中动态取值可以这样
route = 100
stopid = 30
str = 'http://www.baidu.com/text.jsp?route={}&stop={}'.format(route,stopid)
这样就能把变量route和stopid的值替换到字符串str中

如果想要读取命令行的参数,需要导入一个module
import sys
在这个sys中有一个叫argv的数组封装了命令行传递的参数.
Caution index form one
argv[1]为第一个参数
如:python3 nextbus.py 22 1413
在代码中可以这样去获取
#22
first = sys.argv[1]
#1413
second = sys.argv[2]

也可以判断sys.argv的长度.通过
if len(sys.argv) != 3 :
    raise System.Exit('Something you wanna say)

注意这里的System.Exit()是退出程序的和Java的System.exit()差不多

在执行python程序的时候有一个很有用的选项 -i
   如: python3 -i nextbus.py 22 14787
   这会使你进入python的交互环境.你可以在里面打印出每一个变量的值
   直接输入变量名回车即可.

在编写python代码的时候,可以通过如下方式打断点
在代码中插入snipet
import pdb; pdb.set_trace() #launch debugger就可以相当于打断点

在使用-i选项进入交互环境的时候,可以通过如下方式launch debugger
import pdb
这样以后就能launch debugger
and then you input
pdb.pm()
and you also can do do poking around like print sth
print(some)

or you can get the program list just type  list

or you can single-step through the code just type  s


































































